#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
–¢–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –Ω–∞ –±–∞–∑–µ Gemini AI.
–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–µ–≤—Ç, —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ –≤—ã–±–∏—Ä–∞—é—â–∏–π —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ –ø–æ—Ö–æ–¥—ã –∏ —Ç–µ—Ö–Ω–∏–∫–∏ –≤ —Ä–∞–±–æ—Ç–µ —Å –∫–ª–∏–µ–Ω—Ç–æ–º.
–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω –¥–ª—è —Ä—É—Å—Å–∫–æ—è–∑—ã—á–Ω–æ–π –∞—É–¥–∏—Ç–æ—Ä–∏–∏.
–†–µ–∞–ª–∏–∑–æ–≤–∞–Ω –Ω–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ pyTelegramBotAPI.
"""

import os
import logging
import time
import telebot
from telebot import types

from config import TELEGRAM_TOKEN, WELCOME_MESSAGE, HELP_MESSAGE, RESET_MESSAGE, ERROR_MESSAGE
from gemini_client import get_initial_chat, get_gemini_response
from logger import log_interaction

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ç–æ–∫–µ–Ω–∞
if not TELEGRAM_TOKEN:
    logger.error("TELEGRAM_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
    raise ValueError("TELEGRAM_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω")

# –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–æ—Ç–∞
bot = telebot.TeleBot(TELEGRAM_TOKEN)

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —á–∞—Ç-—Å–µ—Å—Å–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_sessions = {}


@bot.message_handler(commands=['start'])
def handle_start(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start - –Ω–∞—á–∞–ª–æ –Ω–æ–≤–æ–π –ø—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–µ–≤—Ç–∏—á–µ—Å–∫–æ–π —Å–µ—Å—Å–∏–∏."""
    user_id = message.from_user.id
    username = message.from_user.username or "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
    first_name = message.from_user.first_name or "–∫–ª–∏–µ–Ω—Ç"
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_sessions[user_id] = get_initial_chat()
    
    # –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    personalized_welcome = WELCOME_MESSAGE.replace("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!", f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {first_name}!")
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    bot.send_message(message.chat.id, personalized_welcome)
    
    log_interaction(user_id, "start", f"/start –æ—Ç @{username}", personalized_welcome)


@bot.message_handler(commands=['help'])
def handle_help(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–µ–≤—Ç–∏—á–µ—Å–∫–∏—Ö –ø–æ–¥—Ö–æ–¥–∞—Ö –∏ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞."""
    user_id = message.from_user.id
    username = message.from_user.username or "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    bot.send_message(message.chat.id, HELP_MESSAGE)
    
    log_interaction(user_id, "help", f"/help –æ—Ç @{username}", HELP_MESSAGE)


@bot.message_handler(commands=['reset'])
def handle_reset(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /reset - –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏ –∏ –Ω–∞—á–∞–ª–æ –Ω–æ–≤–æ–π."""
    user_id = message.from_user.id
    username = message.from_user.username or "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é
    user_sessions[user_id] = get_initial_chat()
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    bot.send_message(message.chat.id, RESET_MESSAGE)
    
    log_interaction(user_id, "reset", f"/reset –æ—Ç @{username}", RESET_MESSAGE)


@bot.callback_query_handler(func=lambda call: True)
def handle_callback_query(call):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏."""
    user_id = call.from_user.id
    username = call.from_user.username or "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–∏
    if call.data == "about_gestalt":
        response_text = """üîç <b>–û –ø—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–µ–≤—Ç–∏—á–µ—Å–∫–∏—Ö –ø–æ–¥—Ö–æ–¥–∞—Ö</b>

–Ø –æ–±—ä–µ–¥–∏–Ω—è—é —Ä–∞–∑–ª–∏—á–Ω—ã–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–∏–∏, –≤–∫–ª—é—á–∞—è –≥–µ—à—Ç–∞–ª—å—Ç-—Ç–µ—Ä–∞–ø–∏—é, –∫–æ–≥–Ω–∏—Ç–∏–≤–Ω–æ-–ø–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫—É—é —Ç–µ—Ä–∞–ø–∏—é, —Å—Ö–µ–º–∞-—Ç–µ—Ä–∞–ø–∏—é, –ù–õ–ü –∏ –¥—Ä—É–≥–∏–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–¥—Ö–æ–¥—ã.

–û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è:
‚Ä¢ –ì–µ—à—Ç–∞–ª—å—Ç-—Ç–µ—Ä–∞–ø–∏—è ‚Äî —Ñ–æ–∫—É—Å –Ω–∞ –Ω–∞—Å—Ç–æ—è—â–µ–º –º–æ–º–µ–Ω—Ç–µ –∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏–π
‚Ä¢ –ö–æ–≥–Ω–∏—Ç–∏–≤–Ω–æ-–ø–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–∞—è —Ç–µ—Ä–∞–ø–∏—è ‚Äî —Ä–∞–±–æ—Ç–∞ —Å –¥–∏—Å—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º–∏ –º—ã—Å–ª—è–º–∏ –∏ –ø–æ–≤–µ–¥–µ–Ω–∏–µ–º
‚Ä¢ –°—Ö–µ–º–∞-—Ç–µ—Ä–∞–ø–∏—è ‚Äî –≤—ã—è–≤–ª–µ–Ω–∏–µ –∏ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–Ω–Ω–∏—Ö –¥–µ–∑–∞–¥–∞–ø—Ç–∏–≤–Ω—ã—Ö —Å—Ö–µ–º
‚Ä¢ –≠–∫–∑–∏—Å—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è —Ç–µ—Ä–∞–ø–∏—è ‚Äî –ø–æ–∏—Å–∫ —Å–º—ã—Å–ª–∞ –∏ –ø—Ä–∏–Ω—è—Ç–∏–µ –±–∞–∑–æ–≤—ã—Ö –¥–∞–Ω–Ω–æ—Å—Ç–µ–π —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è
‚Ä¢ –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ-—Ñ–æ–∫—É—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ç–µ—Ä–∞–ø–∏—è ‚Äî —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤

–í –Ω–∞—à–µ–π —Ä–∞–±–æ—Ç–µ —è –±—É–¥—É –ø–æ–¥–±–∏—Ä–∞—Ç—å –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã, –Ω–∞–∏–±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –∏–º–µ–Ω–Ω–æ –≤–∞—à–µ–π —Å–∏—Ç—É–∞—Ü–∏–∏."""
        
        bot.send_message(call.message.chat.id, response_text, parse_mode="HTML")
        log_interaction(user_id, "callback", f"–ó–∞–ø—Ä–æ—Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–µ–≤—Ç–∏—á–µ—Å–∫–∏—Ö –ø–æ–¥—Ö–æ–¥–∞—Ö –æ—Ç @{username}", response_text)
        
    elif call.data == "about_nlp":
        response_text = """üß† <b>–û –º–µ—Ç–æ–¥–∞—Ö –ø—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–∏–∏</b>

–í —Å–≤–æ–µ–π —Ä–∞–±–æ—Ç–µ —è –ø—Ä–∏–º–µ–Ω—è—é —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏ –∏ –º–µ—Ç–æ–¥—ã, –≤—ã–±–∏—Ä–∞—è –Ω–∞–∏–±–æ–ª–µ–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ –¥–ª—è –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞:

‚Ä¢ –ö–æ–≥–Ω–∏—Ç–∏–≤–Ω–∞—è —Ä–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è ‚Äî –∏–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã—Ö –º—ã—Å–ª–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤
‚Ä¢ –¢–µ—Ö–Ω–∏–∫–∏ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç–∏ ‚Äî —Ä–∞–∑–≤–∏—Ç–∏–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∫ –Ω–∞—Å—Ç–æ—è—â–µ–º—É –º–æ–º–µ–Ω—Ç—É
‚Ä¢ –†–∞–±–æ—Ç–∞ —Å —ç–º–æ—Ü–∏—è–º–∏ ‚Äî –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ, –ø—Ä–∏–Ω—è—Ç–∏–µ –∏ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è —Å–ª–æ–∂–Ω—ã—Ö —á—É–≤—Å—Ç–≤
‚Ä¢ –ü–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–∏–µ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã ‚Äî –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞—é—â–∏—Ö —É–±–µ–∂–¥–µ–Ω–∏–π –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ
‚Ä¢ –†–∞–±–æ—Ç–∞ —Å –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–º–∏ —á–∞—Å—Ç—è–º–∏ ‚Äî –¥–∏–∞–ª–æ–≥ –º–µ–∂–¥—É —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –∞—Å–ø–µ–∫—Ç–∞–º–∏ –ª–∏—á–Ω–æ—Å—Ç–∏
‚Ä¢ –¢–µ—Ö–Ω–∏–∫–∏ –ø—Ä–∏–Ω—è—Ç–∏—è –∏ —Å–æ—Å—Ç—Ä–∞–¥–∞–Ω–∏—è ‚Äî —Ä–∞–∑–≤–∏—Ç–∏–µ –±–æ–ª–µ–µ –¥–æ–±—Ä–æ–≥–æ –æ—Ç–Ω–æ—à–µ–Ω–∏—è –∫ —Å–µ–±–µ

–ì–∏–±–∫–æ–µ —Å–æ—á–µ—Ç–∞–Ω–∏–µ —ç—Ç–∏—Ö –º–µ—Ç–æ–¥–æ–≤ –ø–æ–∑–≤–æ–ª—è–µ—Ç –¥–æ—Å—Ç–∏—á—å –±–æ–ª–µ–µ –≥–ª—É–±–æ–∫–∏—Ö –∏ —É—Å—Ç–æ–π—á–∏–≤—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ –ø—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–∏–∏."""
        
        bot.send_message(call.message.chat.id, response_text, parse_mode="HTML")
        log_interaction(user_id, "callback", f"–ó–∞–ø—Ä–æ—Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–µ—Ç–æ–¥–∞—Ö –ø—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–∏–∏ –æ—Ç @{username}", response_text)
        
    elif call.data == "about_session":
        response_text = """üîÑ <b>–ö–∞–∫ –ø—Ä–æ—Ö–æ–¥–∏—Ç —Å–µ—Å—Å–∏—è</b>

–ù–∞—à–∞ –ø—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–µ–≤—Ç–∏—á–µ—Å–∫–∞—è —Å–µ—Å—Å–∏—è –æ–±—ã—á–Ω–æ –≤–∫–ª—é—á–∞–µ—Ç —Å–ª–µ–¥—É—é—â–∏–µ —ç—Ç–∞–ø—ã:

1. <b>–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ</b> ‚Äî –∏–∑—É—á–∞–µ–º –≤–∞—à—É —Å–∏—Ç—É–∞—Ü–∏—é, —á—É–≤—Å—Ç–≤–∞ –∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏
2. <b>–û—Å–æ–∑–Ω–∞–≤–∞–Ω–∏–µ</b> ‚Äî –æ–±–Ω–∞—Ä—É–∂–∏–≤–∞–µ–º –ø–∞—Ç—Ç–µ—Ä–Ω—ã –º—ã—Å–ª–µ–π, —ç–º–æ—Ü–∏–π –∏ –ø–æ–≤–µ–¥–µ–Ω–∏—è
3. <b>–¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è</b> ‚Äî –ø—Ä–∏–º–µ–Ω—è–µ–º –ø–æ–¥—Ö–æ–¥—è—â–∏–µ —Ç–µ—Ö–Ω–∏–∫–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
4. <b>–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è</b> ‚Äî –∑–∞–∫—Ä–µ–ø–ª—è–µ–º –Ω–æ–≤—ã–π –æ–ø—ã—Ç –∏ –ø–ª–∞–Ω–∏—Ä—É–µ–º –¥–∞–ª—å–Ω–µ–π—à–∏–µ —à–∞–≥–∏
5. <b>–ü—Ä–∞–∫—Ç–∏–∫–∞</b> ‚Äî –ø–µ—Ä–µ–Ω–æ—Å–∏–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –∏–Ω—Å–∞–π—Ç—ã –≤ –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—É—é –∂–∏–∑–Ω—å

–í –ø—Ä–æ—Ü–µ—Å—Å–µ —è –±—É–¥—É –∑–∞–¥–∞–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –ø—Ä–µ–¥–ª–∞–≥–∞—Ç—å —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –∏ —Ç–µ—Ö–Ω–∏–∫–∏, –ø–æ–º–æ–≥–∞—é—â–∏–µ —É–≤–∏–¥–µ—Ç—å —Å–∏—Ç—É–∞—Ü–∏—é —Å —Ä–∞–∑–Ω—ã—Ö —Å—Ç–æ—Ä–æ–Ω –∏ –Ω–∞–π—Ç–∏ –Ω–æ–≤—ã–µ —Ä–µ—à–µ–Ω–∏—è.

–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, —Å —á–µ–º –±—ã –≤—ã —Ö–æ—Ç–µ–ª–∏ –ø–æ—Ä–∞–±–æ—Ç–∞—Ç—å —Å–µ–≥–æ–¥–Ω—è?"""
        
        bot.send_message(call.message.chat.id, response_text, parse_mode="HTML")
        log_interaction(user_id, "callback", f"–ó–∞–ø—Ä–æ—Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ—Å—Å–∏–∏ –æ—Ç @{username}", response_text)
    
    # –û—Ç–º–µ—á–∞–µ–º –∑–∞–ø—Ä–æ—Å –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π
    bot.answer_callback_query(call.id)


@bot.message_handler(func=lambda message: True)
def handle_all_messages(message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ —Ä–∞–∑–ª–∏—á–Ω—ã–µ –ø—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–µ–≤—Ç–∏—á–µ—Å–∫–∏–µ –ø–æ–¥—Ö–æ–¥—ã."""
    user_id = message.from_user.id
    username = message.from_user.username or "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
    user_message = message.text
    
    logger.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {username} (ID: {user_id}): {user_message}")
    
    # –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é
    if user_id not in user_sessions or user_sessions[user_id] is None:
        user_sessions[user_id] = get_initial_chat()
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º "typing..." —Å—Ç–∞—Ç—É—Å
    bot.send_chat_action(message.chat.id, "typing")
    
    # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç Gemini
    try:
        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ª—É—á—à–µ–≥–æ –ø–æ–Ω–∏–º–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –ø—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–∏–∏
        enhanced_message = f"[–ó–∞–ø—Ä–æ—Å –∫–ª–∏–µ–Ω—Ç–∞ –≤ —Ä–∞–º–∫–∞—Ö –ø—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–µ–≤—Ç–∏—á–µ—Å–∫–æ–π —Å–µ—Å—Å–∏–∏]: {user_message}"
        
        response = get_gemini_response(user_sessions[user_id], enhanced_message)
        
        # –£–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —á–∏—Å—Ç—ã–π –æ—Ç–≤–µ—Ç
        bot.send_message(message.chat.id, response)
        log_interaction(user_id, "message", user_message, response)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        bot.send_message(message.chat.id, ERROR_MESSAGE)
        log_interaction(user_id, "error", user_message, str(e))


def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞."""
    import os
    logger.info(f"–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    logger.info(f"TELEGRAM_TOKEN –¥–æ—Å—Ç—É–ø–µ–Ω: {bool(os.environ.get('TELEGRAM_TOKEN'))}")
    logger.info(f"GEMINI_API_KEY –¥–æ—Å—Ç—É–ø–µ–Ω: {bool(os.environ.get('GEMINI_API_KEY'))}")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
        try:
            me = bot.get_me()
            logger.info(f"–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API Telegram —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ. –ò–º—è –±–æ—Ç–∞: {me.first_name}, Username: @{me.username}")
        except telebot.apihelper.ApiException as api_error:
            # –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞ (–∫–æ–¥ 409)
            if "409" in str(api_error):
                logger.error("–û–±–Ω–∞—Ä—É–∂–µ–Ω –∫–æ–Ω—Ñ–ª–∏–∫—Ç —Å –¥—Ä—É–≥–∏–º —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–º –±–æ—Ç–∞. –í–æ–∑–º–æ–∂–Ω–æ, –¥—Ä—É–≥–æ–π —ç–∫–∑–µ–º–ø–ª—è—Ä —É–∂–µ –∑–∞–ø—É—â–µ–Ω.")
                # –ü–æ–ø—ã—Ç–∫–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Å–±—Ä–æ—Å–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
                try:
                    bot.remove_webhook()
                    logger.info("Webhook —É–¥–∞–ª–µ–Ω, –ø–∞—É–∑–∞ –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–æ–π...")
                    import time
                    time.sleep(10)  # –ü–∞—É–∑–∞ –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–æ–π
                except Exception as e2:
                    logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ webhook: {e2}")
            else:
                logger.error(f"–û—à–∏–±–∫–∞ API Telegram: {api_error}")
                return
        except Exception as e:
            logger.error(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ API Telegram: {e}")
            return
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ –∑–∞–ø—É—Å–∫ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
        logger.info("–ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ infinity_polling")
        # –î–æ–±–∞–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –ø–æ–ø—ã—Ç–æ–∫
        retry_count = 0
        max_retries = 3
        
        while retry_count < max_retries:
            try:
                retry_count += 1
                logger.info(f"–ü–æ–ø—ã—Ç–∫–∞ {retry_count}/{max_retries}")
                
                # –°–±—Ä–æ—Å –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
                bot.remove_webhook()
                
                bot.infinity_polling(timeout=30, 
                                    long_polling_timeout=10, 
                                    allowed_updates=["message", "callback_query", "chat_member"],
                                    skip_pending=True)
                break  # –ï—Å–ª–∏ polling –∑–∞–ø—É—Å—Ç–∏–ª—Å—è —É—Å–ø–µ—à–Ω–æ, –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞
            except telebot.apihelper.ApiException as api_error:
                logger.error(f"API –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ {retry_count}: {api_error}")
                if retry_count < max_retries:
                    import time
                    time.sleep(5 * retry_count)  # –£–≤–µ–ª–∏—á–∏–≤–∞—é—â–∞—è—Å—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –ø–æ–ø—ã—Ç–∫–∞–º–∏
            except Exception as e:
                logger.error(f"–û–±—â–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ {retry_count}: {e}")
                if retry_count < max_retries:
                    import time
                    time.sleep(5)
    except Exception as e:
        logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞: {e}")


if __name__ == "__main__":
    main()